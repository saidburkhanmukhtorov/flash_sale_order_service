syntax = "proto3";

package order_service;
option go_package = "/genproto/order_service";

import "google/protobuf/timestamp.proto";

// Order represents an order.
message Order {
  string id = 1;
  string client_id = 2;
  double delivery_latitude = 3;
  double delivery_longitude = 4;
  float total_price = 5;
  string status = 6; // Possible values: 'PENDING', 'PROCESSING', 'SHIPPED', 'DELIVERED', 'CANCELLED'
  google.protobuf.Timestamp created_at = 7;
  google.protobuf.Timestamp updated_at = 8;
}

// CreateOrderRequest represents a request to create a new order.
message CreateOrderRequest {
  Order order = 1;
}

// CreateOrderResponse represents a response to a CreateOrderRequest.
message CreateOrderResponse {
  Order order = 1;
}

// GetOrderRequest represents a request to get an order by ID.
message GetOrderRequest {
  string id = 1;
}

// GetOrderResponse represents a response to a GetOrderRequest.
message GetOrderResponse {
  Order order = 1;
}

// UpdateOrderRequest represents a request to update an existing order.
message UpdateOrderRequest {
  Order order = 1;
}

// UpdateOrderResponse represents a response to an UpdateOrderRequest.
message UpdateOrderResponse {
  Order order = 1;
}

// DeleteOrderRequest represents a request to delete an order by ID.
message DeleteOrderRequest {
  string id = 1;
}

// DeleteOrderResponse represents a response to a DeleteOrderRequest.
message DeleteOrderResponse {
  string message = 1; // Success message
}

// ListOrdersRequest represents a request to list orders.
message ListOrdersRequest {
  int32 page = 1;
  int32 limit = 2;
  string client_id = 3; // Filter by client_id
  string status = 4;    // Filter by status
}

// ListOrdersResponse represents a response to a ListOrdersRequest.
message ListOrdersResponse {
  repeated Order orders = 1;
  int32 total = 2;
}

// UpdateOrderStatusRequest represents a request to update the status of an order.
message UpdateOrderStatusRequest {
  string id = 1;
  string status = 2; // New status
}

// UpdateOrderStatusResponse represents a response to an UpdateOrderStatusRequest.
message UpdateOrderStatusResponse {
  Order order = 1;
}

// OrderService defines the gRPC service for managing orders.
service OrderService {
  rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
  rpc GetOrder(GetOrderRequest) returns (GetOrderResponse);
  rpc UpdateOrder(UpdateOrderRequest) returns (UpdateOrderResponse);
  rpc DeleteOrder(DeleteOrderRequest) returns (DeleteOrderResponse);
  rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse);
  rpc UpdateOrderStatus(UpdateOrderStatusRequest) returns (UpdateOrderStatusResponse);
}